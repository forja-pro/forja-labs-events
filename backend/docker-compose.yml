services:
  app:
    build:
      context: .
      target: dev
    container_name: go_app
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
    env_file:
      - .env
    volumes:
      - .:/app
      - go_cache:/go/pkg/mod
    depends_on:
      db:
        condition: service_healthy
    command:
      [
        "./wait-for-it.sh",
        "db:${POSTGRES_PORT}",
        "--",
        "air",
        "-c",
        ".air.toml",
      ]

  db:
    image: postgres:16.9-alpine3.22
    container_name: postgres_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    env_file:
      - .env
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 2s
      timeout: 3s
      retries: 3

volumes:
  pg_data:
  go_cache:
